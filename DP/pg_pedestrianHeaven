// 2020.09.09 19:00~19:50
// 프로그래머스 보행자 천국
// DP

#include <iostream>
#include <vector>

using namespace std;

int MOD = 20170805;

// dp[i][j]는 오른쪽과 아래쪽으로 이동할 수 있는 경우의 수
// 0은 아래쪽, 1은 오른쪽
int dp[501][501][2];

int solution(int m, int n, vector<vector<int>> city_map) 
{
    for (int i = 0; i <= m; ++i)
        for (int j = 0; j <= n; ++j)
            dp[i][j][0] = dp[i][j][1] = 0;

    dp[1][1][0] = dp[1][1][1] = 1;

    if (m == 1 && n == 1) return 1;

    for (int i = 1; i <= m; ++i)
    {
        for (int j = 1; j <= n; ++j)
        {
            if (city_map[i - 1][j - 1] == 0)
            {
                dp[i][j][0] += (dp[i - 1][j][0] + dp[i][j - 1][1]) % MOD;
                dp[i][j][1] += (dp[i - 1][j][0] + dp[i][j - 1][1]) % MOD;
            }
            else if (city_map[i - 1][j - 1] == 1)
            {
                dp[i][j][0] = dp[i][j][1] = 0;
            }
            else
            {
                dp[i][j][0] = dp[i - 1][j][0];
                dp[i][j][1] = dp[i][j - 1][1];
            }
        }
    }

    return dp[m][n][0];
}

int main(void)
{
    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    int m, n;
    //vector<vector<int>> cm { {0, 0, 0}, {0, 0, 0}, {0, 0, 0} };
    vector<vector<int>> cm{ {0,2,0,0,0,2}, {0,0,2,0,1,0}, {1,0,0,2,2,0} };

    cin >> m >> n;

    cout << solution(m, n, cm);
}
